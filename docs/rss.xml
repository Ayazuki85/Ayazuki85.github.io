<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Ayazuki的博客</title><link>https://Ayazuki85.github.io</link><description>正在建设中……</description><copyright>Ayazuki的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/126930853?u=9ac80a8778a25a9035582eca57b76d3e13957099&amp;v=4</url><title>avatar</title><link>https://Ayazuki85.github.io</link></image><lastBuildDate>Thu, 26 Jun 2025 12:31:41 +0000</lastBuildDate><managingEditor>Ayazuki的博客</managingEditor><ttl>60</ttl><webMaster>Ayazuki的博客</webMaster><item><title>我的VScode配置C语言之路</title><link>https://Ayazuki85.github.io/post/wo-de-VScode-pei-zhi-C-yu-yan-zhi-lu.html</link><description>写下本文的目的是为了记录重装系统后在配置VScode的过程中遇到的困难

# 1.VScode与Clion抉择

## 1.1 为什么不选用Clion？

Windows的控制台默认编码为GBK，我想要UTF-8的编码，出现冲突，找了网络上的解决办法，第一种是将文件编码转为GBK即可解决，第二种是修改注册表取消勾选run.processes.with.pty，这种方法有个隐患，目前截止到2025年6月26日仍然存在该隐患。</description><guid isPermaLink="true">https://Ayazuki85.github.io/post/wo-de-VScode-pei-zhi-C-yu-yan-zhi-lu.html</guid><pubDate>Thu, 26 Jun 2025 12:30:35 +0000</pubDate></item><item><title>Kali Linux 暴力破解WiFi密码</title><link>https://Ayazuki85.github.io/post/Kali%20Linux%20-bao-li-po-jie-WiFi-mi-ma.html</link><description>1.实验前确保有能打开监听模式的网卡
2.使用`sudo airmon-ng`显示无线接口信息

![Image](https://github.com/user-attachments/assets/c68e22e8-9029-4de8-85bf-8d3ec014d9f6)

3.使用`sudo airmon-ng start wlan0` 将名为 wlan0 的无线网卡接口切换到监听模式，以便于后续进行WIFI的扫描

![Image](https://github.com/user-attachments/assets/07ca9368-a597-42d0-bafc-3b41e40d9cec)

4.后续的`airmon-ng`操作都需要root权限，输入`sudo su` 进入到root模式以便于后续操作
5.输入`airmon-ng wlan0mon`监听wlan0mon接口，用来扫描WIFI

![Image](https://github.com/user-attachments/assets/63d05f09-d3bf-4a1c-aa59-6fe36f99834c)

如果已经扫描到已经要破解的目标WIFI，使用Ctrl+C停止，这里已经扫描到了目标WIFI,记录一下bssid和ch的值，后续会用到
6.由于后要利用kali Linux自带的字典进行跑包从而暴力破解WIFI密码，这里我们输入 `cd /usr/share/wordlists/`进入到kali Linux的默认字典目录，然后输入 `airodump-ng -c 1 –bssid 66:9A:0B:A4:A7:18 -w nova wlan0mon`抓取该WIFI的握手包
- `-c 1` 指定要监听的信道号为1
- `-bssid 66:9A:0B:A4:A7:18`用于指定要监控的AP的BSSID
- `-w nova`意味着捕获到的数据将被保存在以 nova 为前缀的文件中

![Image](https://github.com/user-attachments/assets/7b3c5833-c534-4fe4-a919-c0cb4c4340f3)

需要注意，这时需要有一台设备连接此WIFI才能获取到握手包。</description><guid isPermaLink="true">https://Ayazuki85.github.io/post/Kali%20Linux%20-bao-li-po-jie-WiFi-mi-ma.html</guid><pubDate>Fri, 18 Apr 2025 10:36:49 +0000</pubDate></item><item><title>文件</title><link>https://Ayazuki85.github.io/post/wen-jian.html</link><description>### C语言编写文件操作的程序应该遵循以下步骤：&#13;
1. 定义文件指针&#13;
2. 打开文件：文件指针指向磁盘文件缓冲区&#13;
3. 文件处理：文件的读写操作&#13;
4. 关闭文件&#13;
### 文件类型指针(FILE 类型指针)&#13;
FILE 类型指针是 C 语言中用于操作文件的指针。</description><guid isPermaLink="true">https://Ayazuki85.github.io/post/wen-jian.html</guid><pubDate>Thu, 07 Nov 2024 13:02:47 +0000</pubDate></item><item><title>子网划分</title><link>https://Ayazuki85.github.io/post/zi-wang-hua-fen.html</link><description>**A类IP地址：** 网络号 8位，主机号 24位    **范围**：1.0.0.0 到 126.255.255.255&#13;
**B类IP地址：** 网络号 16位，主机号16位   **范围**：128.0.0.0 到 191.255.255.255&#13;
**C类IP地址：** 网络号 24位，主机号8位     **范围**：192.0.0.0 到 223.255.255.255&#13;
**IP地址的位数 = 网络号的位数 + 主机号的位数**&#13;
### 注意：&#13;
IP 地址块 $142.12.23.64/26$ 表示前 26 位是网络号，剩下的部分是主机号。</description><guid isPermaLink="true">https://Ayazuki85.github.io/post/zi-wang-hua-fen.html</guid><pubDate>Wed, 23 Oct 2024 05:50:23 +0000</pubDate></item><item><title>基于SDN网络的异常流量检测与防御方法研究</title><link>https://Ayazuki85.github.io/post/ji-yu-SDN-wang-luo-de-yi-chang-liu-liang-jian-ce-yu-fang-yu-fang-fa-yan-jiu.html</link><description>## 完成本课题需要做的工作包括&#13;
1. 理解软件定义网络（Software-Defined Networking，SDN）的基本概念和原理。</description><guid isPermaLink="true">https://Ayazuki85.github.io/post/ji-yu-SDN-wang-luo-de-yi-chang-liu-liang-jian-ce-yu-fang-yu-fang-fa-yan-jiu.html</guid><pubDate>Thu, 17 Oct 2024 04:42:22 +0000</pubDate></item><item><title>WiFi协议分析</title><link>https://Ayazuki85.github.io/post/WiFi-xie-yi-fen-xi.html</link><description>## 任务&#13;
自建环境，抓包分析WiFi连接过程：&#13;
WiFi扫描（主动扫描；被动扫描）&#13;
WiFi认证&#13;
WiFi关联&#13;
数据传输&#13;
## 实验原理&#13;
![原理](https://github.com/user-attachments/assets/5d4f5c06-6788-4106-9324-b5f0c3e4220f)&#13;
## 实验环境&#13;
实验操作系统：Kali Linux&#13;
硬件设备：RT3070L网卡&#13;
软件：Wireshark抓包工具&#13;
## 实验过程&#13;
### 1.扫描&#13;
被动扫描：STA被动等待AP每隔一段时间定时送出的Beacon信标帧，该帧提供了AP及所在BSS相关信息&#13;
Wireshark适合进行被动扫描，并不适合主动扫描&#13;
![被动扫描](https://github.com/user-attachments/assets/5af28f7a-c16e-411a-847d-ffb21fe03b31)&#13;
在kali终端使用sudo airmon-ng start wlan0命令，将网卡设置为监听模式，以便于Wireshark进行抓包。</description><guid isPermaLink="true">https://Ayazuki85.github.io/post/WiFi-xie-yi-fen-xi.html</guid><pubDate>Wed, 16 Oct 2024 01:47:38 +0000</pubDate></item></channel></rss>